{%- raw -%}
name: Prod
run-name: "${{ github.event.head_commit.message }} | ${{ github.actor }}"

on:
  push:
    branches: [ prod ]

env:
  cli: "bin/${{ github.event.repository.name }}"
  GH_TOKEN: "${{ secrets.GH_TOKEN }}"

jobs:
  prod:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup
        uses: ./.github/actions/setup
        with:
          pypi_repo: prod

      - name: Build dev image
        uses: ./.github/actions/build
        with:
          image_tag: "dev-latest"

      - name: Start container
        run: $cli docker-start

      - name: Run prod tests
        run: $cli test-prod

      - name: Publish python package
        run: $cli build-publish -a ${{ secrets.PYPI_ACCESS_TOKEN }}

      - name: Build prod image
        run: $cli docker-build-prod-no-cache

      - name: Push prod image
        run: $cli docker-push-prod

      - name: Push prod-latest image
        run: $cli docker-push-prod-latest

      - name: Get version
        id: version
        shell: bash
        run: |
          export VERSION=` \
            cat docker/config/pyproject.toml \
            | grep -E '^version *=' \
            | awk '{print $3}' \
            | sed 's/\"//g' \
          `;
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate release
        uses: softprops/action-gh-release@v2
        with:
          make_latest: true
          tag_name: "${{ steps.version.outputs.VERSION }}"
          generate_release_notes: true
          # body: |
          #   [PyPI Package](${{ env.pypi_url }})
          #   [Docker Image](${{ env.docker_url }})
{% endraw %}
